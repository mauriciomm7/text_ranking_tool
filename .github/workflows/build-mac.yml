name: Build Mac Executable

on:
  workflow_dispatch:
  push:
    branches: [ main]

jobs:
  build-apple-silicon:
    runs-on: macos-latest  # Your original working setup
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: ${{ github.sha }}
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Read version number
      id: get_version
      run: |
        VERSION=$(cat version.txt)
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        
    - name: Build Apple Silicon executable
      run: |
        cd packaging/mac
        pyinstaller text_ranking_tool_mac_apple_silicon.spec --distpath dist
        
    - name: Upload Apple Silicon build
      uses: actions/upload-artifact@v4
      with:
        name: apple-silicon-build
        path: packaging/mac/dist/

  build-intel:
    runs-on: macos-13  # Intel runner that worked
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: ${{ github.sha }}
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Read version number
      id: get_version
      run: |
        VERSION=$(cat version.txt)
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        
    - name: Build Intel executable
      run: |
        cd packaging/mac
        pyinstaller text_ranking_tool_mac_intel.spec --distpath dist
        
    - name: Upload Intel build
      uses: actions/upload-artifact@v4
      with:
        name: intel-build
        path: packaging/mac/dist/

  combine-builds:
    runs-on: ubuntu-latest
    needs: [build-apple-silicon, build-intel]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: ${{ github.sha }}
      
    - name: Read version number
      id: get_version
      run: |
        VERSION=$(cat version.txt)
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        
    - name: Download Apple Silicon build
      uses: actions/download-artifact@v4
      with:
        name: apple-silicon-build
        path: apple-silicon/
        
    - name: Download Intel build
      uses: actions/download-artifact@v4
      with:
        name: intel-build
        path: intel/
        
    - name: Create combined package
      run: |
        mkdir -p TextRankingTool-Mac-${{ steps.get_version.outputs.VERSION }}
        cd TextRankingTool-Mac-${{ steps.get_version.outputs.VERSION }}
        
        # Copy executables to separate folders
        mkdir -p Intel AppleSilicon
        cp -r ../intel/* Intel/
        cp -r ../apple-silicon/* AppleSilicon/
        
        # Create shared directories
        mkdir -p devroot/external_data devroot/external_exports devroot/internal_data devroot/internal_exports devroot/internal_users
        
        # Create .gitkeep files
        echo "# This file ensures the directory is preserved in archives" > devroot/external_exports/.gitkeep
        echo "# This file ensures the directory is preserved in archives" > devroot/internal_data/.gitkeep
        echo "# This file ensures the directory is preserved in archives" > devroot/internal_exports/.gitkeep
        echo "# This file ensures the directory is preserved in archives" > devroot/internal_users/.gitkeep

        # Copy config and version to root
        cp ../config.json .
        cp ../version.txt .
        
        # Copy sample CSVs if any exist
        shopt -s nullglob
        for f in ../devroot/external_data/*.csv; do
          [ -f "$f" ] && cp "$f" devroot/external_data/
        done
        
    - name: Zip combined package
      run: |
        zip -r TextRankingTool-Mac-${{ steps.get_version.outputs.VERSION }}-Complete.zip TextRankingTool-Mac-${{ steps.get_version.outputs.VERSION }}

    - name: Upload final package
      uses: actions/upload-artifact@v4
      with:
        name: TextRankingTool-Mac-${{ steps.get_version.outputs.VERSION }}-Complete
        path: TextRankingTool-Mac-${{ steps.get_version.outputs.VERSION }}-Complete.zip
